import { Card } from './card';

export class Deck {
  constructor(obj = {}) {
    this.cards = [];
    if (obj.cards) {
      this.cards = obj.cards;
    }
  }

  toObject() {
    return {
      cards: this.cards
    }
  }

  // Feed in XML string generated by RingsDB Octgn export.
  loadPlayerDeckFromXML(cardDeckXml) {
    let parser = new DOMParser();
    let xmlDoc = parser.parseFromString(cardDeckXml, "text/xml");
    var cards = xmlDoc.getElementsByTagName("card");
    for (var i in cards) {
      if (cards[i].id) {
        this.cards.push(Card(cards[i].id, cards[i].innerHTML, "player"));
      }
    }
  }

  addCard(card) {
    this.cards.push(card);
  }

  removeCard(id) {
    this.cards.splice(id, 1);
  }

  getCard(id) {
    return this.cards[id];
  }

  drawCard() {
    return this.cards.pop();
  }

  drawCards(num) {
    let cards = [];
    for (let i = 0; i < num; i++) {
      cards.add(this.drawCard());
    }
    return cards;
  }
}
